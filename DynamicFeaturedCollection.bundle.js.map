{"version":3,"sources":["webpack:///./source/scripts/components/ProductRowScroller.js","webpack:///./source/scripts/sections/DynamicFeaturedCollection.js"],"names":["ProductRowScroller","productRow","$window","$","window","flickity","$productRow","_mobileSlider","bind","layout","onBreakpointChange","offBreakpointChange","_destroyFlickity","Flickity","cellSelector","contain","freeScroll","percentPosition","prevNextButtons","pageDots","setGallerySize","_bindSlider","off","destroy","isBreakpoint","_initFlickity","$slider","find","on","debounce","trigger","height","Math","ceil","maxCellHeight","DynamicFeaturedCollection","section","$el","el","productItems","$productItems","each","i","productItem","push","ProductGridItem","id","querySelector","_updatePrices","index","CurrencyConverter","update","forEach","unload"],"mappings":"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","file":"DynamicFeaturedCollection.bundle.js","sourcesContent":["import debounce from 'just-debounce';\nimport Flickity from 'flickity';\n\nimport layout from '../Layout';\n\nexport default class ProductRowScroller {\n  constructor(productRow) {\n    this.$window = $(window);\n    this.flickity = null;\n    this.productRow = productRow;\n    this.$productRow = $(this.productRow);\n\n    // Activate flickity on mobile\n    this._mobileSlider = this._mobileSlider.bind(this);\n    layout.onBreakpointChange(this._mobileSlider);\n\n    this._mobileSlider();\n  }\n\n  unload() {\n    layout.offBreakpointChange(this._mobileSlider);\n    this._destroyFlickity();\n  }\n\n  _initFlickity() {\n    this.flickity = new Flickity(this.productRow, {\n      cellSelector: '.productgrid--item',\n      contain: true,\n      freeScroll: true,\n      percentPosition: false,\n      prevNextButtons: false,\n      pageDots: false,\n      setGallerySize: false,\n    });\n\n    this._bindSlider();\n  }\n\n  _destroyFlickity() {\n    if (!this.flickity) {\n      return;\n    }\n\n    this.$window.off('.product-row');\n    this.$productRow.off('.product-row');\n\n    this.flickity.destroy();\n    this.flickity = null;\n  }\n\n  _mobileSlider() {\n    // If is Large layout, attempt to destroy flickity\n    if (layout.isBreakpoint('L')) {\n      this._destroyFlickity();\n      return;\n    }\n\n    // Is XS/S/M, and flickity is init'd -- do nothing\n    if (this.flickity) {\n      return;\n    }\n\n    // Is XS/S/M, and flickity is not init'd\n    this._initFlickity();\n  }\n\n  _bindSlider() {\n    const $slider = this.$productRow.find('.flickity-slider');\n\n    this.$window.on('resize.product-row', debounce(() => {\n      this.$productRow.trigger('heightUpdate.product-row');\n    }));\n\n    this.flickity.on('cellSelect', () => {\n      this.$productRow.trigger('heightUpdate.product-row');\n    });\n\n    this.$productRow.on('heightUpdate.product-row', () => {\n      if (!this.flickity) {\n        return;\n      }\n\n      $slider.height(Math.ceil(this.flickity.maxCellHeight));\n    });\n\n    // Sets the Slider to the height of the first slide\n    this.$productRow.trigger('heightUpdate.product-row');\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport ProductGridItem from '../components/ProductGridItem';\nimport ProductRowScroller from '../components/ProductRowScroller';\n\nexport default class DynamicFeaturedCollection {\n  constructor(section) {\n    this.section = section;\n    this.$el = $(section.el);\n\n    // Product items\n    this.productItems = [];\n    const $productItems = this.$el.find('[data-product-item]');\n\n    $productItems.each((i, productItem) => {\n      this.productItems.push(\n        new ProductGridItem({\n          el: productItem,\n          id: this.section.id,\n        }),\n      );\n    });\n\n    this.ProductRowScroller = new ProductRowScroller(section.el.querySelector('[data-product-row]'));\n\n    this._updatePrices();\n  }\n\n  _updatePrices() {\n    this.$el.find('.money').each((index, el) => CurrencyConverter.update(el));\n  }\n\n  onSectionUnload() {\n    this.productItems.forEach(productItem => {\n      productItem.unload();\n    });\n\n    this.ProductRowScroller.unload();\n  }\n}\n"],"sourceRoot":""}